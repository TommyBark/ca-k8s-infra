{{- if not .Values.nginx }}
{{- $_ := set .Values "nginx" dict }}
{{- end }}
{{- if not .Values.keda }}
{{- $_ := set .Values "keda" dict }}
{{- end }}

---
# Deploy Nginx
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: nginx-app-{{ .Values.environment }}
  labels:
    app: nginx
    component: web
    environment: {{ .Values.environment }}
spec:
  replicas: {{ .Values.keda.minReplicas | default 1 }}
  selector:
    matchLabels:
      app: nginx
      environment: {{ .Values.environment }}
  template:
    metadata:
      labels:
        app: nginx
        environment: {{ .Values.environment }}
    spec:
      containers:
      - name: nginx
        image: {{ .Values.nginx.image | default "nginx:latest" }}
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
---
# Configure Nginx for metrics
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: nginx-app-{{ .Values.environment }}
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;
    
    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;
    
    events {
        worker_connections  1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
    
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
    
        access_log  /var/log/nginx/access.log  main;
    
        sendfile        on;
        keepalive_timeout  65;
    
        server {
            listen       80;
            server_name  localhost;
    
            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }
        }
    }
---
# Nginx Service
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: nginx-app-{{ .Values.environment }}
  labels:
    app: nginx
    environment: {{ .Values.environment }}
spec:
  ports:
  - port: 80
    targetPort: 80
    name: http
  selector:
    app: nginx
    environment: {{ .Values.environment }}
---
# KEDA Interceptor for HTTP requests
apiVersion: http.keda.sh/v1alpha1
kind: HTTPScaledObject
metadata:
  name: nginx-http-scaler
  namespace: nginx-app-{{ .Values.environment }}
spec:
  scaleTargetRef:
    name: nginx
    kind: Deployment
    apiVersion: apps/v1 
    service: nginx
    port: 80
  hosts:
  - nginx.nginx-app-{{ .Values.environment }}.svc.cluster.local
  replicas:
    min: {{ .Values.keda.minReplicas | default 1 }}
    max: {{ .Values.keda.maxReplicas | default 10 }}
  scaledownPeriod: {{ .Values.keda.cooldownPeriod | default 300 }}
  scalingMetric:
    requestRate:
      targetValue: {{ .Values.keda.requestRateThreshold | default 100 }}
